name: Build and deploy to Azure Web App

on:
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: List directory structure
      run: |
        echo "Root directory:"
        ls -la
        echo "src directory (if exists):"
        if [ -d "src" ]; then ls -la src; fi
        echo "frontend directory (if exists):"
        if [ -d "frontend" ]; then ls -la frontend; fi
        echo "src/frontend directory (if exists):"
        if [ -d "src/frontend" ]; then ls -la src/frontend; fi
      
    - name: Create custom Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.11-slim

        WORKDIR /app

        # 必要なファイルを探して適切にコピー
        # requirements.txtが見つからない場合は作成
        RUN echo "fastapi==0.95.1\nuvicorn==0.22.0\npydantic==1.10.7" > requirements.txt
        RUN pip install --no-cache-dir -r requirements.txt

        # アプリケーションコードをコピー
        COPY . .

        EXPOSE 3000
        CMD ["uvicorn", "frontend_server:app", "--host", "0.0.0.0", "--port", "3000"]
        EOF
      
    - name: Set lowercase repository name
      run: echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
    - name: Log in to GitHub Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ env.IMAGE_NAME }}
        tags: |
          type=sha
          type=ref,event=branch
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
    steps:
    - name: Set lowercase repository name
      run: echo "IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'macae-frontend-2kdfb6rxnrtom'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_b82976dafd85465489ae11e5cbee4e3d }}
        images: ghcr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
